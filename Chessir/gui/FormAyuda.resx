<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAQjSURBVGhD3dlrqGVjHMfxI5HI
        5K7cokEoya0ppUm5lTEuub4aSrm8ci8xbqPR5B5FIqSEIkZeyPWFSTMxvDAuL5SQXEsSNcX2/Z3Z/+N/
        nvNbz1prb14sv/o003/+e+/znFnrWc/z7JnRaPS/YItDZItDZItDZItDZItDZItTOhAX4kY8gTfwJp7B
        bbgIh8G9dmK2OAH98FfhA3TNZ7gdR8K9Zy+22MNueAjT5nnol+E+oxNb7Ogy/AKXT6DL6k5cj+twBx7D
        +2jKrXCf1coWW2yFJ1Hmc+iH7XL974+r8R7K6J7aHe51jWyxxQbk/I7L4Xq7OBtfI+c77A3Xb9lixXrk
        rB39NdqHP11vH9vhceR8ix3h+hewxQbPIudhzDAQ1zsp3Us5mgVd3wK2aKxAziPY8m//7kDkGuTcDdc3
        jy0WdsJmRHQz/vPv9YHsh/OhX8Qh41oX5ZR+OFzfHFss5GtXA5p/3fqBHIXXUUZT76lwryl9ichGuJ45
        tpjshZxL4Pqyi9GWlXCvzY5DzhK4vlm2mFyLyFdwPdlilPkUH2/567ycDPce2UeIPAXXM8sWk02IdHnq
        6v6J6PmSf9ij8QUiP2Br5NeXTkfkD2wL11cdiJ6+OQfA9YV9kXMSyh6tzX5D5FiUPaVfETkDrqc6EC23
        I1p+uJ5Ms9KH0JP/tXHNeQeRc+B6sucQuQWupzqQmxF5FK5nEvnyOg2uJ9O+JqKFqOupDuRpRFbB9fS1
        Bjl7wPVlmikjr8D1VAeSnwNairuePnRZ5NwD11c6D5G34HqqA9H2NKI1kOvpQisD/SZzNBu6XudcRN6G
        66kOJC8SJ93wnIDvkaNB7ALX7+QH7KtwPdWB6L6IPAjX0+YB5Ohy3Qaut4ku64juW9dTHciliGhadT1t
        7kdEexnX00bb48hquJ7qQA5Fzp5wfTXa/elgQS4Y1/rSCiDS+B62mGh9FbkSrue/dDxyFsH1tQ5EhwmR
        PjNN0Izz0tgV41ofeeZcC9czyxaTg5FzClxfk3sReRmup8lByKl+ti0WNOVFfoTraXIfItXfqLEOEZ2y
        uJ45tljQKUlO4xRoHAE9B0QbJdfj5ClXWQrXN8cWDe3ocqZ50rfRUj3nBbi+eWyxQXkqqJNC1zeN5cjR
        1Nu4mcpsscHOKJcbugdc7yRuQM6f0GTjehewxQrdL98gRwfWXfbfTY5B3iIrOq3pc0/1HojofybPKJF3
        oSfv9nCvy7RX13Sq50sZPYR7fxFkix3dBZefoW+ntGLWek0HdKIN0k3QaUh5aB3R63aA+7wqW+xBZ03a
        7EwbHRctg/uMTmxxAidCq9Sf0DU6LnoRZ8G9Zy+2OAV9PXAmNAPpwEL3gNZLol2iviDSJaft665w7zER
        WxwiWxwiWxwiWxwiWxwiWxye0czfxazWB44gcm4AAAAASUVORK5CYII=
</value>
  </data>
</root>